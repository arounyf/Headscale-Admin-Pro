"""empty message

Revision ID: 67b57782f3bd
Revises: 
Create Date: 2025-04-20 21:06:32.473540

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '67b57782f3bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('acl',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('acl', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('acl', schema=None) as batch_op:
        batch_op.create_index('idx_acl_user_id', ['user_id'], unique=False)

    op.create_table('log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.create_index('idx_log_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('migrations', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               nullable=False)

    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_nodes_user', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('pre_auth_keys', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_pre_auth_keys_user', 'users', ['user_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_nodes_routes', 'nodes', ['node_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('expire', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('cellphone', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('role', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('enable', sa.Text(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
        batch_op.drop_column('enable')
        batch_op.drop_column('role')
        batch_op.drop_column('cellphone')
        batch_op.drop_column('expire')
        batch_op.drop_column('password')

    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.drop_constraint('fk_nodes_routes', type_='foreignkey')
        batch_op.create_foreign_key(None, 'nodes', ['node_id'], ['id'])
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('pre_auth_keys', schema=None) as batch_op:
        batch_op.drop_constraint('fk_pre_auth_keys_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('nodes', schema=None) as batch_op:
        batch_op.drop_constraint('fk_nodes_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('migrations', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.drop_index('idx_log_user_id')

    op.drop_table('log')
    with op.batch_alter_table('acl', schema=None) as batch_op:
        batch_op.drop_index('idx_acl_user_id')

    op.drop_table('acl')
    # ### end Alembic commands ###
