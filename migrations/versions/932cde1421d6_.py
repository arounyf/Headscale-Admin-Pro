"""empty message

Revision ID: 932cde1421d6
Revises: 
Create Date: 2025-03-26 01:02:51.874987

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '932cde1421d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('acl',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('acl', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('acl', schema=None) as batch_op:
        batch_op.create_index('idx_acl_user_id', ['user_id'], unique=False)

    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('prefix', sa.Text(), nullable=True),
    sa.Column('hash', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expiration', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index('idx_api_keys_prefix', ['prefix'], unique=True)

    op.create_table('log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.create_index('idx_log_user_id', ['user_id'], unique=False)

    op.create_table('migrations',
    sa.Column('id', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('policies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.create_index('idx_policies_deleted_at', ['deleted_at'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('display_name', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('provider_identifier', sa.Text(), nullable=True),
    sa.Column('provider', sa.Text(), nullable=True),
    sa.Column('profile_pic_url', sa.Text(), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('expire', sa.DateTime(), nullable=True),
    sa.Column('cellphone', sa.Text(), nullable=True),
    sa.Column('role', sa.Text(), nullable=True),
    sa.Column('enable', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_name_no_provider_identifier', ['name'], unique=True)
        batch_op.create_index('idx_name_provider_identifier', ['name', 'provider_identifier'], unique=True)
        batch_op.create_index('idx_provider_identifier', ['provider_identifier'], unique=True)
        batch_op.create_index('idx_users_deleted_at', ['deleted_at'], unique=False)

    op.create_table('pre_auth_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('key', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('reusable', sa.Numeric(), nullable=True),
    sa.Column('ephemeral', sa.Numeric(), nullable=True),
    sa.Column('used', sa.Numeric(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expiration', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_pre_auth_keys_user', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('machine_key', sa.Text(), nullable=True),
    sa.Column('node_key', sa.Text(), nullable=True),
    sa.Column('disco_key', sa.Text(), nullable=True),
    sa.Column('endpoints', sa.Text(), nullable=True),
    sa.Column('host_info', sa.Text(), nullable=True),
    sa.Column('ipv4', sa.Text(), nullable=True),
    sa.Column('ipv6', sa.Text(), nullable=True),
    sa.Column('hostname', sa.Text(), nullable=True),
    sa.Column('given_name', sa.String(length=63), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('register_method', sa.Text(), nullable=True),
    sa.Column('forced_tags', sa.Text(), nullable=True),
    sa.Column('auth_key_id', sa.Integer(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['auth_key_id'], ['pre_auth_keys.id'], name='fk_nodes_auth_key'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_nodes_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('prefix', sa.Text(), nullable=True),
    sa.Column('advertised', sa.Numeric(), nullable=True),
    sa.Column('enabled', sa.Numeric(), nullable=True),
    sa.Column('is_primary', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name='fk_nodes_routes', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.create_index('idx_routes_deleted_at', ['deleted_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.drop_index('idx_routes_deleted_at')

    op.drop_table('routes')
    op.drop_table('nodes')
    op.drop_table('pre_auth_keys')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_users_deleted_at')
        batch_op.drop_index('idx_provider_identifier')
        batch_op.drop_index('idx_name_provider_identifier')
        batch_op.drop_index('idx_name_no_provider_identifier')

    op.drop_table('users')
    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.drop_index('idx_policies_deleted_at')

    op.drop_table('policies')
    op.drop_table('migrations')
    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.drop_index('idx_log_user_id')

    op.drop_table('log')
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index('idx_api_keys_prefix')

    op.drop_table('api_keys')
    with op.batch_alter_table('acl', schema=None) as batch_op:
        batch_op.drop_index('idx_acl_user_id')

    op.drop_table('acl')
    # ### end Alembic commands ###
